name: CI

on:
  push:
    branches: [ main ] # Triggers the workflow on push events for the main branch

jobs:
  build:
    # Use the latest Ubuntu runner provided by GitHub Actions
    runs-on: ubuntu-latest # Changed from ubuntu-20.04

    steps:
      # Step 1: Check out the repository code
      - name: Check out code
        uses: actions/checkout@v4

      # Step 2: Get the current date (used for cache key)
      # Note: Caching might be more effective using only file hashes,
      # but this date method ensures a fresh build context periodically.
      - name: Get Date
        id: get-date
        run: echo "date=$(/bin/date -u +%Y%m%d)" >> $GITHUB_ENV

      # Step 3: Cache the global Buildozer downloads (SDK, NDK, etc.)
      # Cache is invalidated if buildozer.spec changes.
      - name: Cache Buildozer global directory
        uses: actions/cache@v3
        with:
          path: ~/.buildozer_global # Correct path for global cache
          key: buildozer-global-${{ hashFiles('buildozer.spec') }}

      # Step 4: Cache the local Buildozer build directory
      # Cache includes OS, date, and buildozer.spec hash.
      - name: Cache Buildozer local directory
        uses: actions/cache@v3
        with:
          path: .buildozer # Correct path for local project build cache
          key: ${{ runner.os }}-${{ env.date }}-${{ hashFiles('buildozer.spec') }}
          # Restore keys are optional but can help if the primary key misses
          # restore-keys: |
          #   ${{ runner.os }}-${{ env.date }}-
          #   ${{ runner.os }}-

      # Step 5: Build the Android debug APK using Buildozer
      - name: Build with Buildozer
        uses: ArtemSBulgakov/buildozer-action@v1
        id: buildozer # Give the step an ID to reference its outputs
        with:
          command: buildozer android debug # The command to execute
          buildozer_version: stable      # Use the stable release of Buildozer

      # Step 6: Upload the generated APK as an artifact
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: package # Name of the artifact bundle
          # Path to the generated APK file, obtained from the buildozer step's output
          path: ${{ steps.buildozer.outputs.filename }}